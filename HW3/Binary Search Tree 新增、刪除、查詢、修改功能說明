
二元樹搜尋 Binary Search Tree 
主要的優點就是時間複雜度能優化至O(logN) 
1.每個節點最多有兩個子節點 
2.子節點有左右之分 
3.左子樹的節點小於根節點、右子樹的節點大於根節點 
4.節點值不重複

Insert

1.每次新增都要從TREE最頂端的root 開始，欲插入的值若是比root值小，則放在下面child 的左邊，若是比root值大，則放在下面child的右邊。
2.若是欲插入的值跟root 值相等，則插入下方child的左邊。

Search

1.觀念很像Insert，先設定好我們要搜尋的值，之後開始跟root做比較，若是跟root值相同，則回傳root 的位置
2.欲搜尋的值比root值大，則往右邊的child ，若比root值小，就往左邊，以此類推往下做同樣的動作直到找到欲搜尋的值
Delete 
這個部份我們可以分成三個情況來說明 
1.欲刪除值底下沒有child : 在這個情況下，就直接刪除那個值，然後會回傳none 
2.欲刪除值底下有一個child: 在被刪除值底下的child變成被刪除值root下面的child 
3.欲刪除的值底下有兩個child: 被刪除值底下兩個child中較大的值取代被刪除的值成為root，使得底下變成只有一個child

Modify 
可以分為先新增後刪除，以及先刪除後新增兩種方式去做

​
